
CREATE DATABASE tienda;

USE tienda;

CREATE TABLE usuarios(
    id INT AUTO_INCREMENT PRIMARY KEY, 
    nombre VARCHAR(100),
    apellido VARCHAR(100),
    edad INT, 
    email VARCHAR(100), 
    contrasena VARCHAR(16), 
    rol VARCHAR (7), 
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	fecha_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP
);

CREATE TABLE categoria(
    id INT AUTO_INCREMENT,
    nombre VARCHAR(100),
    tipo VARCHAR(10),
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	fecha_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    PRIMARY KEY (id, nombre)
);

CREATE TABLE producto(
    id INT AUTO_INCREMENT PRIMARY KEY, 
    nombre_producto VARCHAR(100),
    usuario_id INT,
    precio FLOAT,
    stock INT, 
    nombre_categoria INT,
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	fecha_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id),
    FOREIGN KEY (nombre_categoria) REFERENCES categoria(id)
);

CREATE TABLE ventas(
    id INT AUTO_INCREMENT PRIMARY KEY, 
    producto_id INT,
    usuario_id INT ,
    cantidad INT,
    precio_total FLOAT,
    fecha_creacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP,
	fecha_actualizacion TIMESTAMP DEFAULT CURRENT_TIMESTAMP ON UPDATE CURRENT_TIMESTAMP,
    FOREIGN KEY (producto_id) REFERENCES producto(id),
    FOREIGN KEY (usuario_id) REFERENCES usuarios(id)
);

INSERT INTO categoria (nombre, tipo) VALUES
    ('calzado', 'deportivo'),
    ('ropa femenina', 'blusa'),
    ('ropa para ninos', 'bluejeans');

INSERT INTO usuarios(nombre, apellido, edad, email, contrasena, rol) VALUES 
    ('America', 'Palacios', 45, 'americapal10@gmail.com','DDWED12QWDD1sd', 'admin'),
    ('Silvia', 'Soto', 34, 'silvias@gmail.com','DDWEDsdsdDD1sd', 'usuario'),
    ('Juan', 'Lander', 44, 'landerj@gmail.com','DaaWED12Q1sd', 'usuario'),
    ('Andres', 'Sanchez', 24, 'andress@gmail.com' ,'DED12QWxccvD1sd', 'usuario'),
    ('Luisa', 'gonzalez', 17, 'lg2024@gmail.com','DDsdED12xx.D1sd', 'usuario');

INSERT INTO producto(nombre_producto, usuario_id, precio, stock, nombre_categoria) VALUES 
    ('Nike Runner', 1, 125.50, 10, 1), -- se actualiza su precio a 0.9% precio actual
    ('Adidas' 5, 135.20, 25, 1),
    ('Blusa de algodon', 2, 140.78, 50, 2),
    ('Blusa de lino',4, 135.77, 5, 2), -- Se actualiza su stock a 0
    ('Bluejean bebe',1, 80.66, 50, 3),
    ('bluejeans chico', 3, 65.77, 7, 3);

INSERT INTO ventas(producto_id, usuario_id, cantidad, Precio_total) VALUES 
    (2, 3, 3, 405.6),
    (6, 1, 2, 131.54),
    (6, 5, 1, 65.77),
    (3, 2, 2, 281.56),
    (1, 4, 1, 125.50),
    (5, 3, 3, 241.98),
    (4, 1, 1, 135.77), --Eliminado
    (6, 2, 1, 65.77),
    (3, 4, 2, 281.56),
    (1, 2, 3, 376.50);

SELECT nombre, apellido, rol FROM usuarios WHERE rol = 'admin'; 

SELECT id, nombre_producto, stock  FROM producto;

SELECT usuario_id, SUM(precio_total) AS total_ventas FROM ventas GROUP BY usuario_id;

UPDATE producto 
    SET precio = precio * 0.9 
    WHERE precio > 100 AND precio < 130;

SELECT * FROM producto;

UPDATE producto 
    SET precio = precio * 0.9 
    WHERE precio > 100 AND precio < 130;

UPDATE producto
    set stock =0 
    WHERE STOCK <= 5;

SELECT * FROM producto;

DELETE ventas
    FROM ventas
    INNER JOIN producto ON ventas.producto_id = producto.id
    WHERE producto.stock = 0;

--Otra manera:
DELETE FROM ventas WHERE producto_id IN (SELECT id FROM producto WHERE stock = 0);

SELECT * FROM ventas;


/*Este ejercicio tendra un enfoque a un sistema de gestion de tiendas:
nota: usar primary keys y auto-incremento
1. Crear una base de datos llamada: Tienda
2. Crear 4 tablas dentro se la base de datos
	1. usuarios (id, nombre, apellido edad, email, contrasena, rol, fecha_creacion, fecha_actualizacion)
    2. categoria (id, nombre, tipo, fecha_creacion, fecha_actualizacion)
    3. producto (id, nombre_producto, usuario_id, cantidad, precio, stock, nombre_categoria, fecha_creacion, fecha_actualizacion)
    4. ventas (id, producto_id, usuario_id, cantidad, precio_total, fecha_creacion, fecha_actualizacion)
        nota: tiene claves foraneas
    Nota: tiene 2 claves foraneas

3. insertar datos:
    1. Insertar 5 usuarios (1 admin)
    2. Registrar 3 Categorias
    3. Registrar 6 productos (2 por cada categorias)
    4. 

2. Insertar Datos:

    - Insertar 5 usuarios (1 admin)
    - Registrar 3 categorias
    - Registrar 6 productos (2 por cada categoria)
    - Registrar 10 ventas

3. Consultas a realizar:

    - Seleccionar usuarios con un rol especifico.
    - Obtener el stock disponible de todos los productos
    - Calcular el total de ventas por usuario_id
    - Actualizar el precio de un producto mayor a 100 y aplicar descuento del 10%
    - Eliminar ventas de un producto agotado (con un stock de 0)
*/
